name: Terraform Destroy

on:
  #push:
    #branches: ["main"]
  workflow_dispatch:
    inputs:
      run_destroy:
        description: Runs tf apply or destroy ?
        type: boolean
        required: false
        default: false

env:
  AWS_ACCESS_KEY_ID: ${{}}
  AWS_SECRET_ACCESS_KEY: ${{}}
  AWS_REGION: us-east-2

jobs:
  terraform:
    #if: ${{ github.event.inputs.run_destroy == 'false' || github.ref = 'refs/heads/main' }}
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event.inputs.run_apply_or_destroy != 'destroy' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: My 1st TF Setup
        uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{}}

      - name: Run TF init
        run: terraform init
     
      #- name: Check TF Format
        #run: terraform fmt -check -recursive

      - name: Run TF plan
        run: terraform plan

      - name: Run TF Apply
        run: terraform destroy -auto-approve
        #if: ${{ github.event_name == 'workflow_dispatch' && github.event.inputs.run_apply == 'true' }}

  destroy:
      if: ${{ github.event.inputs.destroy == 'true' }}
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4

        - name: My 1st TF Setup
          uses: hashicorp/setup-terraform@v2
          with:
            li_config_credentials_token: ${{}}

        - name: Run TF init
          run: terraform init
     
        #- name: Check TF Format
          #run: terraform fmt -check -recursive

        - name: Run TF plan destroy
          run: terraform plan -destroy
      
        - name: Run TF Apply
          run: terraform destroy -auto-approve
          if: ${{ github.event.inputs.run_destroy == 'true' }}